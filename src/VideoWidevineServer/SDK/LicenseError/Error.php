<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\LicenseError;

use UnexpectedValueException;

/**
 * Protobuf type <code>VideoWidevineServer.SDK.LicenseError.Error</code>
 */
class Error
{
    /**
     * Generated from protobuf enum <code>ERROR_UNKNOWN = 0;</code>
     */
    const ERROR_UNKNOWN = 0;
    /**
     * The device credentials are invalid. The device must re-provision.
     *
     * Generated from protobuf enum <code>INVALID_DEVICE_CERTIFICATE = 1;</code>
     */
    const INVALID_DEVICE_CERTIFICATE = 1;
    /**
     * The device credentials have been revoked. Re-provisioning is not
     * possible.
     *
     * Generated from protobuf enum <code>REVOKED_DEVICE_CERTIFICATE = 2;</code>
     */
    const REVOKED_DEVICE_CERTIFICATE = 2;
    /**
     * The service is currently unavailable due to the backend being down
     * or similar circumstances.
     *
     * Generated from protobuf enum <code>SERVICE_UNAVAILABLE = 3;</code>
     */
    const SERVICE_UNAVAILABLE = 3;

    private static $valueToName = [
        self::ERROR_UNKNOWN => 'ERROR_UNKNOWN',
        self::INVALID_DEVICE_CERTIFICATE => 'INVALID_DEVICE_CERTIFICATE',
        self::REVOKED_DEVICE_CERTIFICATE => 'REVOKED_DEVICE_CERTIFICATE',
        self::SERVICE_UNAVAILABLE => 'SERVICE_UNAVAILABLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Error::class, \VideoWidevineServer\SDK\LicenseError_Error::class);

