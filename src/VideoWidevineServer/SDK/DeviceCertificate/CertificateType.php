<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\DeviceCertificate;

use UnexpectedValueException;

/**
 * Protobuf type <code>VideoWidevineServer.SDK.DeviceCertificate.CertificateType</code>
 */
class CertificateType
{
    /**
     * Generated from protobuf enum <code>ROOT = 0;</code>
     */
    const ROOT = 0;
    /**
     * Generated from protobuf enum <code>INTERMEDIATE = 1;</code>
     */
    const INTERMEDIATE = 1;
    /**
     * Generated from protobuf enum <code>USER_DEVICE = 2;</code>
     */
    const USER_DEVICE = 2;
    /**
     * Generated from protobuf enum <code>SERVICE = 3;</code>
     */
    const SERVICE = 3;

    private static $valueToName = [
        self::ROOT => 'ROOT',
        self::INTERMEDIATE => 'INTERMEDIATE',
        self::USER_DEVICE => 'USER_DEVICE',
        self::SERVICE => 'SERVICE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CertificateType::class, \VideoWidevineServer\SDK\DeviceCertificate_CertificateType::class);

