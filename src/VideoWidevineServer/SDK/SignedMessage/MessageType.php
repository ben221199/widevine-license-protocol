<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\SignedMessage;

use UnexpectedValueException;

/**
 * Protobuf type <code>VideoWidevineServer.SDK.SignedMessage.MessageType</code>
 */
class MessageType
{
    /**
     * Generated from protobuf enum <code>MESSAGETYPE_UNKNOWN = 0;</code>
     */
    const MESSAGETYPE_UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>LICENSE_REQUEST = 1;</code>
     */
    const LICENSE_REQUEST = 1;
    /**
     * Generated from protobuf enum <code>LICENSE = 2;</code>
     */
    const LICENSE = 2;
    /**
     * Generated from protobuf enum <code>ERROR_RESPONSE = 3;</code>
     */
    const ERROR_RESPONSE = 3;
    /**
     * Generated from protobuf enum <code>SERVICE_CERTIFICATE_REQUEST = 4;</code>
     */
    const SERVICE_CERTIFICATE_REQUEST = 4;
    /**
     * Generated from protobuf enum <code>SERVICE_CERTIFICATE = 5;</code>
     */
    const SERVICE_CERTIFICATE = 5;

    private static $valueToName = [
        self::MESSAGETYPE_UNKNOWN => 'MESSAGETYPE_UNKNOWN',
        self::LICENSE_REQUEST => 'LICENSE_REQUEST',
        self::LICENSE => 'LICENSE',
        self::ERROR_RESPONSE => 'ERROR_RESPONSE',
        self::SERVICE_CERTIFICATE_REQUEST => 'SERVICE_CERTIFICATE_REQUEST',
        self::SERVICE_CERTIFICATE => 'SERVICE_CERTIFICATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MessageType::class, \VideoWidevineServer\SDK\SignedMessage_MessageType::class);

