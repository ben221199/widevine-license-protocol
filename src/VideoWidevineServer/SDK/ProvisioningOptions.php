<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ProvisioningOptions specifies the type of certificate to specify and
 * in the case of X509 certificates, the certificate authority to use.
 *
 * Generated from protobuf message <code>VideoWidevineServer.SDK.ProvisioningOptions</code>
 */
class ProvisioningOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.ProvisioningOptions.CertificateType certificate_type = 1;</code>
     */
    protected $certificate_type = null;
    /**
     * It is recommended that the certificate_authority specify the X.509
     * Subject of the signing certificate.
     *
     * Generated from protobuf field <code>optional string certificate_authority = 2;</code>
     */
    protected $certificate_authority = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $certificate_type
     *     @type string $certificate_authority
     *           It is recommended that the certificate_authority specify the X.509
     *           Subject of the signing certificate.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LicenseProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.ProvisioningOptions.CertificateType certificate_type = 1;</code>
     * @return int
     */
    public function getCertificateType()
    {
        return isset($this->certificate_type) ? $this->certificate_type : 0;
    }

    public function hasCertificateType()
    {
        return isset($this->certificate_type);
    }

    public function clearCertificateType()
    {
        unset($this->certificate_type);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.ProvisioningOptions.CertificateType certificate_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setCertificateType($var)
    {
        GPBUtil::checkEnum($var, \VideoWidevineServer\SDK\ProvisioningOptions\CertificateType::class);
        $this->certificate_type = $var;

        return $this;
    }

    /**
     * It is recommended that the certificate_authority specify the X.509
     * Subject of the signing certificate.
     *
     * Generated from protobuf field <code>optional string certificate_authority = 2;</code>
     * @return string
     */
    public function getCertificateAuthority()
    {
        return isset($this->certificate_authority) ? $this->certificate_authority : '';
    }

    public function hasCertificateAuthority()
    {
        return isset($this->certificate_authority);
    }

    public function clearCertificateAuthority()
    {
        unset($this->certificate_authority);
    }

    /**
     * It is recommended that the certificate_authority specify the X.509
     * Subject of the signing certificate.
     *
     * Generated from protobuf field <code>optional string certificate_authority = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCertificateAuthority($var)
    {
        GPBUtil::checkString($var, True);
        $this->certificate_authority = $var;

        return $this;
    }

}

