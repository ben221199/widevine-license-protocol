<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\LicenseRequest\ContentIdentification;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>VideoWidevineServer.SDK.LicenseRequest.ContentIdentification.WebM</code>
 */
class WebM extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bytes header = 1;</code>
     */
    protected $header = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.LicenseType license_type = 2;</code>
     */
    protected $license_type = null;
    /**
     * Opaque, client-specified.
     *
     * Generated from protobuf field <code>optional bytes request_id = 3;</code>
     */
    protected $request_id = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $header
     *     @type int $license_type
     *     @type string $request_id
     *           Opaque, client-specified.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LicenseProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bytes header = 1;</code>
     * @return string
     */
    public function getHeader()
    {
        return isset($this->header) ? $this->header : '';
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     * Generated from protobuf field <code>optional bytes header = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkString($var, False);
        $this->header = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.LicenseType license_type = 2;</code>
     * @return int
     */
    public function getLicenseType()
    {
        return isset($this->license_type) ? $this->license_type : 0;
    }

    public function hasLicenseType()
    {
        return isset($this->license_type);
    }

    public function clearLicenseType()
    {
        unset($this->license_type);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.LicenseType license_type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLicenseType($var)
    {
        GPBUtil::checkEnum($var, \VideoWidevineServer\SDK\LicenseType::class);
        $this->license_type = $var;

        return $this;
    }

    /**
     * Opaque, client-specified.
     *
     * Generated from protobuf field <code>optional bytes request_id = 3;</code>
     * @return string
     */
    public function getRequestId()
    {
        return isset($this->request_id) ? $this->request_id : '';
    }

    public function hasRequestId()
    {
        return isset($this->request_id);
    }

    public function clearRequestId()
    {
        unset($this->request_id);
    }

    /**
     * Opaque, client-specified.
     *
     * Generated from protobuf field <code>optional bytes request_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, False);
        $this->request_id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(WebM::class, \VideoWidevineServer\SDK\LicenseRequest_ContentIdentification_WebM::class);

