<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\License\KeyContainer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>VideoWidevineServer.SDK.License.KeyContainer.VideoResolutionConstraint</code>
 */
class VideoResolutionConstraint extends \Google\Protobuf\Internal\Message
{
    /**
     * Minimum and maximum video resolutions in the range (height x width).
     *
     * Generated from protobuf field <code>optional uint32 min_resolution_pixels = 1;</code>
     */
    protected $min_resolution_pixels = null;
    /**
     * Generated from protobuf field <code>optional uint32 max_resolution_pixels = 2;</code>
     */
    protected $max_resolution_pixels = null;
    /**
     * Optional output protection requirements for this range. If not
     * specified, the OutputProtection in the KeyContainer applies.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 3;</code>
     */
    protected $required_protection = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $min_resolution_pixels
     *           Minimum and maximum video resolutions in the range (height x width).
     *     @type int $max_resolution_pixels
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $required_protection
     *           Optional output protection requirements for this range. If not
     *           specified, the OutputProtection in the KeyContainer applies.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LicenseProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Minimum and maximum video resolutions in the range (height x width).
     *
     * Generated from protobuf field <code>optional uint32 min_resolution_pixels = 1;</code>
     * @return int
     */
    public function getMinResolutionPixels()
    {
        return isset($this->min_resolution_pixels) ? $this->min_resolution_pixels : 0;
    }

    public function hasMinResolutionPixels()
    {
        return isset($this->min_resolution_pixels);
    }

    public function clearMinResolutionPixels()
    {
        unset($this->min_resolution_pixels);
    }

    /**
     * Minimum and maximum video resolutions in the range (height x width).
     *
     * Generated from protobuf field <code>optional uint32 min_resolution_pixels = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMinResolutionPixels($var)
    {
        GPBUtil::checkUint32($var);
        $this->min_resolution_pixels = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional uint32 max_resolution_pixels = 2;</code>
     * @return int
     */
    public function getMaxResolutionPixels()
    {
        return isset($this->max_resolution_pixels) ? $this->max_resolution_pixels : 0;
    }

    public function hasMaxResolutionPixels()
    {
        return isset($this->max_resolution_pixels);
    }

    public function clearMaxResolutionPixels()
    {
        unset($this->max_resolution_pixels);
    }

    /**
     * Generated from protobuf field <code>optional uint32 max_resolution_pixels = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxResolutionPixels($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_resolution_pixels = $var;

        return $this;
    }

    /**
     * Optional output protection requirements for this range. If not
     * specified, the OutputProtection in the KeyContainer applies.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 3;</code>
     * @return \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection|null
     */
    public function getRequiredProtection()
    {
        return isset($this->required_protection) ? $this->required_protection : null;
    }

    public function hasRequiredProtection()
    {
        return isset($this->required_protection);
    }

    public function clearRequiredProtection()
    {
        unset($this->required_protection);
    }

    /**
     * Optional output protection requirements for this range. If not
     * specified, the OutputProtection in the KeyContainer applies.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 3;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $var
     * @return $this
     */
    public function setRequiredProtection($var)
    {
        GPBUtil::checkMessage($var, \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection::class);
        $this->required_protection = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(VideoResolutionConstraint::class, \VideoWidevineServer\SDK\License_KeyContainer_VideoResolutionConstraint::class);

