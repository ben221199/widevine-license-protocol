<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto

namespace VideoWidevineServer\SDK\License;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>VideoWidevineServer.SDK.License.KeyContainer</code>
 */
class KeyContainer extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bytes id = 1;</code>
     */
    protected $id = null;
    /**
     * Generated from protobuf field <code>optional bytes iv = 2;</code>
     */
    protected $iv = null;
    /**
     * Generated from protobuf field <code>optional bytes key = 3;</code>
     */
    protected $key = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyType type = 4;</code>
     */
    protected $type = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.SecurityLevel level = 5;</code>
     */
    protected $level = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 6;</code>
     */
    protected $required_protection = null;
    /**
     * NOTE: Use of requested_protection is not recommended as it is only
     * supported on a small number of platforms.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection requested_protection = 7;</code>
     */
    protected $requested_protection = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyControl key_control = 8;</code>
     */
    protected $key_control = null;
    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OperatorSessionKeyPermissions operator_session_key_permissions = 9;</code>
     */
    protected $operator_session_key_permissions = null;
    /**
     * Optional video resolution constraints. If the video resolution of the
     * content being decrypted/decoded falls within one of the specified ranges,
     * the optional required_protections may be applied. Otherwise an error will
     * be reported.
     * NOTE: Use of this feature is not recommended, as it is only supported on
     * a small number of platforms.
     *
     * Generated from protobuf field <code>repeated .VideoWidevineServer.SDK.License.KeyContainer.VideoResolutionConstraint video_resolution_constraints = 10;</code>
     */
    private $video_resolution_constraints;
    /**
     * Optional flag to indicate the key must only be used if the client
     * supports anti rollback of the user table.  Content provider can query the
     * client capabilities to determine if the client support this feature.
     *
     * Generated from protobuf field <code>optional bool anti_rollback_usage_table = 11;</code>
     */
    protected $anti_rollback_usage_table = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *     @type string $iv
     *     @type string $key
     *     @type int $type
     *     @type int $level
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $required_protection
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $requested_protection
     *           NOTE: Use of requested_protection is not recommended as it is only
     *           supported on a small number of platforms.
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\KeyControl $key_control
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\OperatorSessionKeyPermissions $operator_session_key_permissions
     *     @type \VideoWidevineServer\SDK\License\KeyContainer\VideoResolutionConstraint[]|\Google\Protobuf\Internal\RepeatedField $video_resolution_constraints
     *           Optional video resolution constraints. If the video resolution of the
     *           content being decrypted/decoded falls within one of the specified ranges,
     *           the optional required_protections may be applied. Otherwise an error will
     *           be reported.
     *           NOTE: Use of this feature is not recommended, as it is only supported on
     *           a small number of platforms.
     *     @type bool $anti_rollback_usage_table
     *           Optional flag to indicate the key must only be used if the client
     *           supports anti rollback of the user table.  Content provider can query the
     *           client capabilities to determine if the client support this feature.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LicenseProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bytes id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return isset($this->id) ? $this->id : '';
    }

    public function hasId()
    {
        return isset($this->id);
    }

    public function clearId()
    {
        unset($this->id);
    }

    /**
     * Generated from protobuf field <code>optional bytes id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, False);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes iv = 2;</code>
     * @return string
     */
    public function getIv()
    {
        return isset($this->iv) ? $this->iv : '';
    }

    public function hasIv()
    {
        return isset($this->iv);
    }

    public function clearIv()
    {
        unset($this->iv);
    }

    /**
     * Generated from protobuf field <code>optional bytes iv = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIv($var)
    {
        GPBUtil::checkString($var, False);
        $this->iv = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bytes key = 3;</code>
     * @return string
     */
    public function getKey()
    {
        return isset($this->key) ? $this->key : '';
    }

    public function hasKey()
    {
        return isset($this->key);
    }

    public function clearKey()
    {
        unset($this->key);
    }

    /**
     * Generated from protobuf field <code>optional bytes key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyType type = 4;</code>
     * @return int
     */
    public function getType()
    {
        return isset($this->type) ? $this->type : 0;
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyType type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \VideoWidevineServer\SDK\License\KeyContainer\KeyType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.SecurityLevel level = 5;</code>
     * @return int
     */
    public function getLevel()
    {
        return isset($this->level) ? $this->level : 0;
    }

    public function hasLevel()
    {
        return isset($this->level);
    }

    public function clearLevel()
    {
        unset($this->level);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.SecurityLevel level = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setLevel($var)
    {
        GPBUtil::checkEnum($var, \VideoWidevineServer\SDK\License\KeyContainer\SecurityLevel::class);
        $this->level = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 6;</code>
     * @return \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection|null
     */
    public function getRequiredProtection()
    {
        return isset($this->required_protection) ? $this->required_protection : null;
    }

    public function hasRequiredProtection()
    {
        return isset($this->required_protection);
    }

    public function clearRequiredProtection()
    {
        unset($this->required_protection);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection required_protection = 6;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $var
     * @return $this
     */
    public function setRequiredProtection($var)
    {
        GPBUtil::checkMessage($var, \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection::class);
        $this->required_protection = $var;

        return $this;
    }

    /**
     * NOTE: Use of requested_protection is not recommended as it is only
     * supported on a small number of platforms.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection requested_protection = 7;</code>
     * @return \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection|null
     */
    public function getRequestedProtection()
    {
        return isset($this->requested_protection) ? $this->requested_protection : null;
    }

    public function hasRequestedProtection()
    {
        return isset($this->requested_protection);
    }

    public function clearRequestedProtection()
    {
        unset($this->requested_protection);
    }

    /**
     * NOTE: Use of requested_protection is not recommended as it is only
     * supported on a small number of platforms.
     *
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OutputProtection requested_protection = 7;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection $var
     * @return $this
     */
    public function setRequestedProtection($var)
    {
        GPBUtil::checkMessage($var, \VideoWidevineServer\SDK\License\KeyContainer\OutputProtection::class);
        $this->requested_protection = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyControl key_control = 8;</code>
     * @return \VideoWidevineServer\SDK\License\KeyContainer\KeyControl|null
     */
    public function getKeyControl()
    {
        return isset($this->key_control) ? $this->key_control : null;
    }

    public function hasKeyControl()
    {
        return isset($this->key_control);
    }

    public function clearKeyControl()
    {
        unset($this->key_control);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.KeyControl key_control = 8;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\KeyControl $var
     * @return $this
     */
    public function setKeyControl($var)
    {
        GPBUtil::checkMessage($var, \VideoWidevineServer\SDK\License\KeyContainer\KeyControl::class);
        $this->key_control = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OperatorSessionKeyPermissions operator_session_key_permissions = 9;</code>
     * @return \VideoWidevineServer\SDK\License\KeyContainer\OperatorSessionKeyPermissions|null
     */
    public function getOperatorSessionKeyPermissions()
    {
        return isset($this->operator_session_key_permissions) ? $this->operator_session_key_permissions : null;
    }

    public function hasOperatorSessionKeyPermissions()
    {
        return isset($this->operator_session_key_permissions);
    }

    public function clearOperatorSessionKeyPermissions()
    {
        unset($this->operator_session_key_permissions);
    }

    /**
     * Generated from protobuf field <code>optional .VideoWidevineServer.SDK.License.KeyContainer.OperatorSessionKeyPermissions operator_session_key_permissions = 9;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\OperatorSessionKeyPermissions $var
     * @return $this
     */
    public function setOperatorSessionKeyPermissions($var)
    {
        GPBUtil::checkMessage($var, \VideoWidevineServer\SDK\License\KeyContainer\OperatorSessionKeyPermissions::class);
        $this->operator_session_key_permissions = $var;

        return $this;
    }

    /**
     * Optional video resolution constraints. If the video resolution of the
     * content being decrypted/decoded falls within one of the specified ranges,
     * the optional required_protections may be applied. Otherwise an error will
     * be reported.
     * NOTE: Use of this feature is not recommended, as it is only supported on
     * a small number of platforms.
     *
     * Generated from protobuf field <code>repeated .VideoWidevineServer.SDK.License.KeyContainer.VideoResolutionConstraint video_resolution_constraints = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getVideoResolutionConstraints()
    {
        return $this->video_resolution_constraints;
    }

    /**
     * Optional video resolution constraints. If the video resolution of the
     * content being decrypted/decoded falls within one of the specified ranges,
     * the optional required_protections may be applied. Otherwise an error will
     * be reported.
     * NOTE: Use of this feature is not recommended, as it is only supported on
     * a small number of platforms.
     *
     * Generated from protobuf field <code>repeated .VideoWidevineServer.SDK.License.KeyContainer.VideoResolutionConstraint video_resolution_constraints = 10;</code>
     * @param \VideoWidevineServer\SDK\License\KeyContainer\VideoResolutionConstraint[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setVideoResolutionConstraints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \VideoWidevineServer\SDK\License\KeyContainer\VideoResolutionConstraint::class);
        $this->video_resolution_constraints = $arr;

        return $this;
    }

    /**
     * Optional flag to indicate the key must only be used if the client
     * supports anti rollback of the user table.  Content provider can query the
     * client capabilities to determine if the client support this feature.
     *
     * Generated from protobuf field <code>optional bool anti_rollback_usage_table = 11;</code>
     * @return bool
     */
    public function getAntiRollbackUsageTable()
    {
        return isset($this->anti_rollback_usage_table) ? $this->anti_rollback_usage_table : false;
    }

    public function hasAntiRollbackUsageTable()
    {
        return isset($this->anti_rollback_usage_table);
    }

    public function clearAntiRollbackUsageTable()
    {
        unset($this->anti_rollback_usage_table);
    }

    /**
     * Optional flag to indicate the key must only be used if the client
     * supports anti rollback of the user table.  Content provider can query the
     * client capabilities to determine if the client support this feature.
     *
     * Generated from protobuf field <code>optional bool anti_rollback_usage_table = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setAntiRollbackUsageTable($var)
    {
        GPBUtil::checkBool($var);
        $this->anti_rollback_usage_table = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(KeyContainer::class, \VideoWidevineServer\SDK\License_KeyContainer::class);

